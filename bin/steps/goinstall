#!/bin/bash
set -euo pipefail

BUILD_DIR=$1

GO_VERSION="1.8.3"

export GoInstallDir="/tmp/go$GO_VERSION"
mkdir -p $GoInstallDir

if [ ! -f $GoInstallDir/go/bin/go ]; then
  GO_MD5="32ec5ac6020a0dbae5fadd1ff6dfdaf7"
  URL=https://buildpacks.cloudfoundry.org/dependencies/go/go${GO_VERSION}.linux-amd64-${GO_MD5:0:8}.tar.gz

  echo "-----> Download go ${GO_VERSION}"
  curl -s -L --retry 15 --retry-delay 2 $URL -o /tmp/go.tar.gz

  DOWNLOAD_MD5=$(md5sum /tmp/go.tar.gz | cut -d ' ' -f 1)

  if [[ $DOWNLOAD_MD5 != $GO_MD5 ]]; then
    echo "       **ERROR** MD5 mismatch: got $DOWNLOAD_MD5 expected $GO_MD5"
    exit 1
  fi

  tar xzf /tmp/go.tar.gz -C $GoInstallDir
fi
if [ ! -f $GoInstallDir/go/bin/go ]; then
  echo "       **ERROR** Could not download go"
  exit 1
fi

export GOROOT=$GoInstallDir/go
export GOPATH=$BUILD_DIR
PATH=$GOROOT/bin:$PATH
PATH=$GOPATH/bin:$PATH

p=$GOPATH/src/github.com/F5Networks/cf-bigip-ctlr
mkdir -p $p
rsync -a $BUILD_DIR/ $p/

go get github.com/tools/godep
cd $p
godep restore
go build -v -o $BUILD_DIR/cf-bigip-ctlr
