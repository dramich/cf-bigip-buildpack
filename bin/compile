#!/bin/bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_PATH=$(dirname $(readlink -f ${BASH_SOURCE%/*}))
DEPS_DIR="$BUILD_DIR/.cloudfoundry"
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

mkdir -p $CACHE_DIR
mkdir -p "$DEPS_DIR/0"
mkdir -p "$BUILD_DIR/.profile.d"

echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"
printf "I AM DOING THINGS IN COMPILE\n"
echo "BUILD_DIR" $BUILD_DIR
echo "CACHE_DIR" $CACHE_DIR
echo "BUILDPACK_DIR" $BUILDPACK_DIR
pwd
ls $BUILD_DIR

GO_VERSION="1.8.3"

export GoInstallDir="/tmp/go$GO_VERSION"
mkdir -p $GoInstallDir

if [ ! -f $GoInstallDir/go/bin/go ]; then
  GO_MD5="32ec5ac6020a0dbae5fadd1ff6dfdaf7"
  URL=https://buildpacks.cloudfoundry.org/dependencies/go/go${GO_VERSION}.linux-amd64-${GO_MD5:0:8}.tar.gz

  echo "-----> Download go ${GO_VERSION}"
  curl -s -L --retry 15 --retry-delay 2 $URL -o /tmp/go.tar.gz

  DOWNLOAD_MD5=$(md5sum /tmp/go.tar.gz | cut -d ' ' -f 1)

  if [[ $DOWNLOAD_MD5 != $GO_MD5 ]]; then
    echo "       **ERROR** MD5 mismatch: got $DOWNLOAD_MD5 expected $GO_MD5"
    exit 1
  fi

  tar xzf /tmp/go.tar.gz -C $GoInstallDir
fi
if [ ! -f $GoInstallDir/go/bin/go ]; then
  echo "       **ERROR** Could not download go"
  exit 1
fi
cd $BUILD_DIR
GOROOT=$GoInstallDir/go GOPATH=$BUILD_DIR $GoInstallDir/go/bin/go list
$BUILDPACK_PATH/bin/supply "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0
$BUILDPACK_PATH/bin/finalize "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0
